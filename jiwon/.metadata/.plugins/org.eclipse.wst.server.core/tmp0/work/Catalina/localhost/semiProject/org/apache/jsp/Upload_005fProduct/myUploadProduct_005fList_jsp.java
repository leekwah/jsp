/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-19 08:23:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Upload_005fProduct;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.SimpleDateFormat;
import java.sql.Timestamp;
import semiProject.uploadProduct.ProductBean;
import java.util.ArrayList;
import semiProject.uploadProduct.ProductDBBean;

public final class myUploadProduct_005fList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("semiProject.uploadProduct.ProductBean");
    _jspx_imports_classes.add("java.sql.Timestamp");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("semiProject.uploadProduct.ProductDBBean");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");

	String pageNum = request.getParameter("pageNum");//페이지 넘버 가져오기

	if(pageNum == null) {
		pageNum = "1";
	}
	ProductDBBean updb = ProductDBBean.getInstance();
	
	ArrayList<ProductBean> productList = updb.productList(pageNum);
	
	int product_number=0,product_price=0,product_stock=0;
	String product_name="",category_code="";
	Timestamp create_date = null;
	String stored_file_name="";//이미지 파일 호출을위한 변수
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link >\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<a href=\"main.jsp\">메인페이지</a>\r\n");
      out.write("	<table border=\"1\">\r\n");
      out.write("		<tr align=\"center\">\r\n");
      out.write("			<td width=\"80\">\r\n");
      out.write("				<input type=\"checkbox\" name=\"all_select\">No\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>상품명</td>\r\n");
      out.write("			<td width=\"80\">판매가</td>\r\n");
      out.write("			<td width=\"80\">카테고리</td>\r\n");
      out.write("			<td width=\"80\">재고</td>\r\n");
      out.write("			<td width=\"80\">등록일</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		");

			for(int i = 0; i < productList.size(); i++) {
				ProductBean upbd = productList.get(i);
				
				product_number = upbd.getProduct_number();
				product_name = upbd.getProduct_name();
				product_price = upbd.getProduct_price();
				category_code = upbd.getCategory_code();
				product_stock = upbd.getProduct_stock();
				stored_file_name = updb.getImg(product_number).getStored_file_name();
				create_date = updb.getImg(product_number).getCreate_date();
			}
		
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td align=\"center\">\r\n");
      out.write("				<input type=\"checkbox\" name=\"productNum_select\">");
      out.print( product_number );
      out.write("\r\n");
      out.write("			</td>\r\n");
      out.write("			<td width=\"200\" height=\"100\">\r\n");
      out.write("				<img src=\"C:\\jsp_project\\semiProject\\WebContent\\img\\");
      out.print(stored_file_name);
      out.write("\" style=\"padding-right: 30px;\">");
      out.print(product_name );
      out.write("\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				");
      out.print(product_price );
      out.write("원\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				");
      out.print(category_code );
      out.write("\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				");
      out.print(product_stock );
      out.write("개\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				");
      out.print(sdf.format(create_date));
      out.write("\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				<input type=\"button\" value=\"수정\" onclick=\"location.href='updateProduct.jsp?product_number=");
      out.print(product_number);
      out.write("'\">\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
